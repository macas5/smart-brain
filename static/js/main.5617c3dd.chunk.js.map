{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Score/Score.js","components/srvFetch/srvFetch.js","components/validator/validator.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Rankings/Rankings.js","App.js","serviceWorker.js","index.js","components/Logo/brain.svg"],"names":["Navigation","onRouteChange","isSignedIn","className","onClick","Logo","options","max","style","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","onEnterPress","type","onKeyPress","onChange","Score","name","entries","document","title","srvFetch","target","method","body","fetch","process","headers","JSON","stringify","then","response","includes","status","json","isValid","email","password","isRegister","isValidEmail","length","String","isValidPassword","isValidName","test","Register","props","onNameChange","event","setState","value","onEmailChange","onPasswordChange","pswStrength","passwordStrength","onSubmitRegister","state","validation","errorMsg","localStorage","setItem","refreshToken","loadUser","accessToken","key","componentDidMount","id","htmlFor","this","React","Component","FaceRecognition","imageUrl","box","boundingBox","map","element","index","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","signInEmail","signInPassword","onSubmitSignIn","Rankings","rankingsList","userRank","userEntries","list","slice","entry","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","user","joined","rank","App","data","calculateFaceLocation","image","getElementById","Number","outputs","regions","face","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","Validator","isURL","count","Object","assign","catch","console","log","err","updateRankingsList","removeItem","found","i","x","app","params","routeSelection","getItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.5617c3dd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({onRouteChange, isSignedIn}) => {\n  if(isSignedIn) {\n    return (\n      <div className='ml-auto fl-grow-99'>\n        <nav className='flex justify-end flex-wrap'>\n          <p onClick={() => onRouteChange('home')} \n          className='f3 link dim black underline pa3 pointer mb0'>Home</p>\n          <p onClick={() => onRouteChange('rankings')} \n          className='f3 link dim black underline pa3 pointer mb0'>Rankings</p>\n          <p onClick={() => onRouteChange('signout')} \n          className='f3 link dim black underline pa3 pointer mb0'>Sign Out</p>\n        </nav>\n      </div>\n    );\n  } else {\n    return (\n      <div className='ml-auto fl-grow-99'>\n        <nav className='flex justify-end flex-wrap'>\n          <p onClick={() => onRouteChange('signin')} \n          className='f3 link dim black underline pa3 pointer mb0'> Sign In</p>\n          <p onClick={() => onRouteChange('register')} \n          className='f3 link dim black underline pa3 pointer mb0'> Register</p>\n        </nav>\n      </div>\n    );\n  }  \n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.svg'\nimport './Logo.css';\n\nconst Logo = () => {\n  return(\n    <div className= 'ma4 fl-grow-1 flex justify-center justify-start-ns'>\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} \n      style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner pa3\"> \n          <img src={brain} alt='logo'/>\n        </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ({onInputChange, onButtonSubmit, onEnterPress}) => {\n  return(\n    <div className= 'ma4 mt0'>\n      <p className='f3'>\n        {'This Magic Brain will detect faces in your pictures. Give it a try'}\n      </p>\n      <div className='center'>\n        <div className='center form pa4 br3 shadow-5 flex flex-wrap justify-center'>\n          <input className='mv1 f4 pa2 fl-grow-7 center minwidth0' type='text'\n           onKeyPress={onEnterPress} onChange={onInputChange} />\n          <button className='grow mv1 f4 link ph3 pv2 dib white bg-light-purple minw120 fl-grow-3 mw-30'\n          onClick={onButtonSubmit}>  Detect</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;\n","import React from 'react';\n\nconst Score = ({name, entries}) => {\n  document.title = \"Smart Brain\";\n\n  return(\n    <div>\n      <div className='mh4 white f3'>\n        {`${name}, your current entry count is...`}\n      </div>\n      <div className='white f1'>\n        {`${entries}`}\n      </div>\n    </div>\n  );\n}\n\nexport default Score;","const srvFetch = (target, method, body) => {\n  return (fetch(`${process.env.REACT_APP_BACK_END_LOCATION}/${target}`,  {\n      method: `${method}`,\n      headers: {'Content-Type': 'application/json'},\n      ...(method !== 'GET' && {body: JSON.stringify({ ...body })})\n    })\n    .then(response => {\n      if ([400, 404, 500].includes(response.status)){\n        return false;\n      } else if (response.status === 409) return -1\n      else {\n        return response.json();\n      }\n    })    \n  )\n}\n\nexport default srvFetch;","const isValid = (email, password, name = '', isRegister = false) => {\n  const isValidEmail = (email) => {\n    if ((email.includes('@')) && (email.includes('.')) && (email.length < 65) \n    && (email.length > 5) && (typeof email === 'string' || email instanceof String)) {\n      return true;\n    }\n    return false;\n  }  \n  \n  const isValidPassword = (password) => {\n    if ((password.length > 2) && (password.length < 65) \n    // Lifted up some requirements for ease of testing\n    // && (/\\d/.test(password)) && (/[A-Z a-z]/.test(password)) \n    // && (/[~`!#$%\\-\\^&*+=\\[\\]\\\\';,/{}|\\\\\":<>\\?]/.test(password))\n    && (typeof password === 'string' || password instanceof String)){\n      return true;\n    }\n    return false;\n  }\n\n  const isValidName = (name) => {\n    if ((name.length > 1) && (name.length < 65) \n    && (!(/[\\d~`!#$%&*+=[\\]\\\\';,/{}|\\\\\":<>?]/.test(name))) \n    && (typeof name === 'string' || name instanceof String)){\n      return true;\n    }\n    return false;\n  }\n  \n  if (isRegister) {\n    return  (\n      isValidEmail(email) ?\n        isValidPassword(password) ?\n          isValidName(name) ? true\n          : -3\n        : -2\n      : -1\n    )\n  } else {\n    return  (\n      isValidEmail(email) ?\n        isValidPassword(password) ? true\n        : -2\n      : -1\n    )\n  }\n}\n\nexport default isValid;","import React from 'react';\nimport srvFetch from '../srvFetch/srvFetch';\nimport passwordStrength from 'check-password-strength';\nimport isValid from '../validator/validator'\n\nclass Register extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      name: '',\n      pswStrength: 'Weak',\n      errorMsg: ''\n    }\n  }\n\n  onNameChange = (event) => {\n    this.setState({name: event.target.value});\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value});\n  }\n\n  onPasswordChange = (event) => {\n    if (event.target.value){\n      this.setState({password: event.target.value, \n        pswStrength: passwordStrength(event.target.value).value});\n    }\n  }\n\n  onSubmitRegister = () => {\n    const { name, email, password } = this.state;\n    const validation = isValid (email, password, name, true);\n    if (validation > 0) {\n      srvFetch('register', 'post', {\n        name: name, email: email, password: password})\n      .then(response => {\n        if (response === -1){\n          this.setState({errorMsg: 'Email is already in use'})\n        } else {\n          if (response) {\n            this.setState({errorMsg: ''});\n            localStorage.setItem('refreshToken', response.refreshToken);\n            this.props.loadUser(response.accessToken);\n            this.props.onRouteChange('signedin');\n          }\n        }\n      })\n    } else {\n      switch (validation) {\n        case -1:\n          this.setState({errorMsg: 'You must enter correct email format'});\n          break;\n        case -2:\n          this.setState({errorMsg: 'You must enter correct password format'});\n          break;\n        case -3:\n          this.setState({errorMsg: 'You must enter correct name format'});\n          break;\n        default:\n          this.setState({errorMsg: 'Unexpected error'});\n      }\n    }\n  }\n\n  onEnterPress = (event) => {\n    if (event.key === 'Enter') this.onSubmitRegister();\n  }\n  \n  componentDidMount = () => {\n    document.title = \"Register - Smart Brain\";\n  }\n\n  render(){\n    return(\n      <article className=\"mv4 w-100 mw6-ns center\">\n        <main className=\"br3 ba b--black-10 shadow-5 mh5-ns pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba mw5 b--transparent ph0 mh0 center\">\n              <legend className=\"f2 f1-ns fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input onKeyPress={this.onEnterPress} onChange={this.onNameChange} \n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                type=\"text\" name=\"name\"  id=\"name\" />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input onKeyPress={this.onEnterPress} onChange={this.onEmailChange} \n                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                type=\"email\" name=\"email-address\"  id=\"email-address\" />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input onKeyPress={this.onEnterPress} onChange={this.onPasswordChange} \n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                type=\"password\" name=\"password\"  id=\"password\" \n                title=\"Password must contain at least 6 characters of which at least \n                1 must be a number\" />\n              </div>\n              <div>\n                <p>Password strength: {this.state.pswStrength}</p>\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input onClick={this.onSubmitRegister} \n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n              type=\"submit\" value=\"Register\" />\n            </div>\n            <div className=\"lh-copy mt3\" />\n            <div><p className=\"mb0 red\">{this.state.errorMsg}</p></div>\n          </div>\n        </main>\n      </article>\n    );\n  }\n}\n\nexport default Register;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box, errorMsg}) => {\n  if (!errorMsg.length) {\n    const boundingBox = box.map((element, index) => <div key={index} className='bounding-box' \n    style={{top: element.topRow, right: element.rightCol, bottom: element.bottomRow, left: element.leftCol}}/>)\n    return(\n      <div className='flex justify-center ma'>\n        <div className='absolute mt2'>\n          <img id='inputimage' src={imageUrl} alt ='' width='500px' height='auto'/>\n          {boundingBox}\n        </div>\n      </div>\n    );\n  } else {\n    return(\n      <div className='center ma'>\n        <p className='red'>{errorMsg}</p>\n      </div>\n    )\n  }\n}\n\nexport default FaceRecognition;","import React from 'react';\nimport srvFetch from '../srvFetch/srvFetch';\nimport isValid from '../validator/validator';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      signInEmail: '',\n      signInPassword: '',\n      errorMsg: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value});\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value});\n  }\n\n  onSubmitSignIn = () => {\n    const { signInEmail, signInPassword } = this.state;\n    const validation = isValid(signInEmail, signInPassword);\n    if (validation > 0){\n      srvFetch('signin', 'post', {email: signInEmail, \n        password: signInPassword})\n      .then(response => {\n        if(response && response !== -1){\n          localStorage.setItem('accessToken', response.accessToken);\n          this.props.loadUser(response.accessToken);\n          this.props.onRouteChange('signedin');\n        } else {\n          this.setState({errorMsg: 'Incorrect username or password'});\n        }\n      })\n    } else {\n      switch (validation) {\n        case -1:\n          this.setState({errorMsg: 'You must enter correct email format'});\n          break;\n        case -2:\n          this.setState({errorMsg: 'You must enter correct password format'});\n          break;\n        default:\n          this.setState({errorMsg: 'Unexpected error'});\n      }\n    }\n  }\n\n  onEnterPress = (event) => {\n    if (event.key === 'Enter') this.onSubmitSignIn();\n  }\n\n  componentDidMount = () => {\n    document.title = \"Sign In - Smart Brain\";\n  }\n\n  render(){\n    const { onRouteChange } = this.props;    \n\n    return(\n      <article className=\"mv4 w-100 mw6-ns center\">\n      <main className=\"br3 ba b--black-10 shadow-5 mh5-ns pa4 black-80\">\n        <div className=\"measure\">\n          <fieldset id=\"sign_up\" className=\"ba mw5 b--transparent ph0 mh0 center\">\n            <legend className=\"f2 f1-ns fw6 ph0 mh0\">Sign In</legend>\n            <div className=\"mt3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n              <input onKeyPress={this.onEnterPress} onChange={this.onEmailChange} \n              className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"email\" name=\"email-address\"  id=\"email-address\" />\n            </div>\n            <div className=\"mv3\">\n              <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n              <input onKeyPress={this.onEnterPress} onChange={this.onPasswordChange} \n              className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n              type=\"password\" name=\"password\"  id=\"password\" />\n            </div>\n          </fieldset>\n          <div className=\"\">\n            <input onClick={this.onSubmitSignIn} \n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n            type=\"submit\" value=\"Sign In\" />\n          </div>\n          <div className=\"lh-copy mt3\">\n            <p onClick={() => onRouteChange('register')} \n            className=\"f6 link dim black db pointer\">Register</p>\n            <div><p className=\"mb0 red\">{this.state.errorMsg}</p></div>\n          </div>\n        </div>\n      </main>\n    </article>\n    );\n  }\n}\n\nexport default SignIn;","import React from 'react'\nimport './Rankings.css'\n\n const Rankings = ({rankingsList, userRank, userEntries}) => {\n  const list = rankingsList.slice(0, 10).map((entry, index) => {\n      return (\n        (entry.entries > 0) ?\n          <li key={'li'+entry.id} className=\"ph3 tl pv2 bb flex b--light-silver\">\n          <span key={'spanl'+entry.id} className='w2'>{index + 1}. </span>\n          <span key= {'spanm'+entry.id} className='mr-auto'>{entry.name}</span> \n          <span key={'spanr'+entry.id}>{entry.entries}</span></li>\n        :\n          <li key={'li'+entry.id} className=\"ph3 tl pv2 bb flex b--light-silver\">\n          <span key={'spanl'+entry.id} className='w2'>{index + 1}. </span>\n          <span key={'spanm'+entry.id} className='mr-auto'></span> \n          <span key={'spanr'+entry.id}></span></li>\n      );\n  })\n\n  document.title = \"Rankings - Smart Brain\";\n\n  return (\n    <div>\n      <h1>\n        {userEntries > 0?\n          <p>Your current rank is: {userRank}</p>\n        :\n          <p>You need to have a score higher than 0 to get a rank</p>\n        }\n      </h1>\n      <hr className= 'center mw6 light-silver'/>\n      <h1>Current user standings:</h1>\n      <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\n        {list}\n      </ul>\n    </div>\n  )\n}  \n\nexport default Rankings;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport Validator from 'validator';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Score from './components/Score/Score';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Rankings from './components/Rankings/Rankings'\nimport srvFetch from './components/srvFetch/srvFetch'\nimport './App.css';\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: [{}],\n  route: 'loading',\n  isSignedIn: false,\n  errorMsg: '',\n  rankingsList: [{}],\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n    rank: 0\n  }\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => \n    fetch(`${process.env.REACT_APP_BACK_END_LOCATION}/getuser`, {\n      method: 'get',\n      headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + data }\n    })\n    .then (response => response.json())\n    .then (data => {\n      if (data === \"Invalid\"){\n        return false;\n      } else {\n        this.setState({user: {\n          id: data.id,\n          name:data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }, isSignedIn: true})\n      }\n      return true;\n    })\n\n  calculateFaceLocation =(data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const clarifaiFace = data.outputs[0].data.regions.map( face => {\n      const box = face.region_info.bounding_box;\n      return {\n        leftCol: box.left_col * width,\n        topRow: box.top_row * height,\n        rightCol: width - (box.right_col * width),\n        bottomRow: height - (box.bottom_row * height)\n      }\n    })\n    return clarifaiFace\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    if (Validator.isURL(this.state.input)){\n      this.setState({errorMsg: ''});\n      srvFetch('imageurl', 'post', {input: this.state.input})\n      .then(response => {\n        if (response && response !== -1) {\n          srvFetch('image', 'put', {id: this.state.user.id})\n          .then(count => {\n            this.setState(Object.assign(this.state.user, { entries: count}))\n          })\n          .catch(console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n    } else {\n      this.setState({errorMsg: 'Please put in correct photo URL'});\n    }\n  }\n\n  onEnterPress = (event) => {\n    if (event.key === 'Enter') this.onButtonSubmit();\n  }\n\n  onRouteChange = (route) =>{\n    switch (route) {\n      case 'home':\n        this.setState({route: route});\n        break;\n\n      case 'signedin':\n        this.setState({isSignedIn: true});\n        this.setState({route: 'home'});\n        break;\n        \n      case 'rankings':\n        this.updateRankingsList();\n        this.setState({route: route});\n        break;\n\n      case 'register':\n        this.setState({route: route});\n        break;\n\n      case 'loading':\n        this.setState({route: route});\n        break;\n\n      case 'signin':\n        this.setState({route: route});\n        break;\n      \n      default:\n        localStorage.removeItem('accessToken');\n        this.setState({route: 'signin'});\n        this.setState(initialState);\n    }\n  }\n\n  updateRankingsList = () => srvFetch('rankings', 'GET')\n  .then(response => {\n    let found = false;\n    let i = 0;\n    while (!found || i < response.length){\n      if (response[i].id === this.state.user.id){\n        Object.assign(this.state.user, {rank: i + 1});\n        found = true;\n      }\n      i++;\n    }\n    this.setState({rankingsList: response.map(x => x)}) ;\n  })\n\n  render(){\n    const {isSignedIn} = this.state;\n\n    const routeSelection = () => {\n      const {imageUrl, route, box, rankingsList, user, errorMsg} = this.state;\n      switch (route){\n        case 'signin':\n          return (\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}\n           isSignedIn={this.isSignedIn} />\n          )\n  \n        case 'home':\n          return (\n            <div>\n              <Score name={user.name} entries={user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} onEnterPress={this.onEnterPress}/>\n              <FaceRecognition box={box} imageUrl={imageUrl} errorMsg={errorMsg}/>\n            </div>\n          )\n        \n        case 'rankings':\n          return (\n            <Rankings rankingsList={rankingsList} userRank={user.rank} userEntries={user.entries}/>\n          )\n  \n        case 'register':\n          return (\n            <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n\n        case 'loading':\n          return (\n            <div/>\n          )\n        default:\n          return <p>There were some problems getting route</p>\n      }\n    }\n\n    \n    const app = (\n    <div className=\"App\">\n      <Particles className='particles' params={particlesOptions} />\n      <div className='flex flex-wrap justify-end flex-row-reverse'>\n        {(this.state.route !== \"loading\") && \n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>}\n        <Logo />\n      </div>\n      {routeSelection()}\n    </div>\n    )\n\n    const init = () => {\n      if (this.state.route === 'loading'){\n        this.loadUser(localStorage.getItem('accessToken'))\n        .then(response => {\n          if (response) {\n            this.onRouteChange('signedin')\n            return app;\n          } else {\n            this.onRouteChange('signin')\n            return app; \n          }\n        })\n      } \n      return app;\n    }\n    return (init());\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.014560c0.svg\";"],"sourceRoot":""}